---
title: "Habitat representativeness index"
author: "Isabelle Lebeuf-Taylor, Vanessa Di Maurizio, Vincent Bellavance et Benjamin Mercier"
documentclass: book
output:
  html_document:
    toc: true
    number_sections: true
  revealjs_presentation:
    incremental: true   
---

```{r, eval = FALSE}
# Download the ecozone data
# Specify the URL of the file you want to download
url <- "https://sis.agr.gc.ca/cansis/nsdb/ecostrat/zone/ecozone_shp.zip"

# Specify the file name and location where you want to save the file on your computer
file_name <- "ecozone_shp.zip"
file_path <- "0_Data/"

# Call the download.file() function, passing in the URL and file name/location as arguments
download.file(url, paste(file_path, file_name, sep = ""), mode = "wb")

# Unzip the folder
unzip(paste0(file_path, file_name), exdir = "0_Data")

# Download the protected areas data
# Specify the URL of the file you want to download
url <- "https://data-donnees.az.ec.gc.ca/api/file?path=/species%2Fprotectrestore%2Fcanadian-protected-conserved-areas-database%2FDatabases%2FAireProtegeeConservee_2023.zip"

# Specify the file name and location where you want to save the file on your computer
file_name <- "protected_shp.zip"
file_path <- "0_Data/"

# Call the download.file() function, passing in the URL and file name/location as arguments
download.file(url, paste(file_path, file_name, sep = ""), mode = "wb")

# Unzip the folder
unzip(paste0(file_path, file_name), exdir = "0_Data")
```

```{r, eval = FALSE}
library(sf)
library(ggplot2)

#canada_provinces <- rnaturalearth::ne_states(country = "canada", returnclass = "sf")

# Check available layers for portected areas and ecozones
sf::st_layers("0_Data/AireProtegeeConservee_2023/AireProtegeeConservee_2023.gdb")
sf::st_layers("0_Data/Ecozones/ecozones.shp")

# Read the layers and normalize crs with the Canada map
protected_area <- sf::st_read("0_Data/AireProtegeeConservee_2023/AireProtegeeConservee_2023.gdb", "AireProtegeeConservee_2023")
ecozones <- sf::st_read("0_Data/Ecozones/ecozones.shp", layer = "ecozones") |>
  sf::st_transform(crs = sf::st_crs(protected_area))

# Get world map with provinces
#world <- rnaturalearth::ne_countries(scale = "medium", returnclass = "sf")
#canada <- world[world$name == "Canada", ] |>
#  sf::st_transform(sf::st_crs(protected_area))

# Set custom colors for the ecozones
custom_colors <- c("Northern Arctic" = "lightskyblue", "Arctic Cordillera" = "royalblue", "Southern Arctic" = "royalblue4", "Taiga Cordillera" = "lavenderblush3", "Taiga Plain" = "khaki4", "Taiga Shield" = "orangered4", "Boreal Cordillera" = "darkolivegreen", "Boreal PLain" = "darkgreen", "Pacific Maritime" = "turquoise3", "Boreal Shield" = "coral2", "Hudson Plain" = "lightsalmon3", "Montane Cordillera" = "gold3", "Prairie" = "orange", "Atlantic Maritime" = "midnightblue", "MixedWood Plain" = "springgreen")

# Plot
map <- ggplot() +
  #geom_sf(data = canada, fill = "white", color = "grey") +
  geom_sf(data = ecozones, aes(fill = as.factor(ZONE_NAME)), alpha = 0.5) +
  scale_fill_manual(values = custom_colors) +
  geom_sf(data = protected_area, aes(fill = as.factor(IUCN_CAT)), alpha = 0.2) +
  theme_minimal()+
  theme(
       legend.position = "bottom",
       legend.text = element_text(size = 8),
       legend.title = element_text(size = 10),
       plot.title = element_text(size = 15)
      ) +
  labs(fill = "Ecozones")

ggsave("figures/map.png", plot = map, dpi = "retina", height = 18, width = 18, units = "cm", bg = "white")
```

### Workflow

Headline indicator: Protected Habitat Coverage (PHC)
Complementary indicator: Protected Habitat Eveness / Protection d'Habitat Ã©gal (PHE)

```{r}
# install.packages('DiagrammeR')
library(DiagrammeR)

DiagrammeR(
  "
  graph TB
  
  A[Data ecoregion] --> C[Joined data]
  B[Data protected areas] --> C[Joined data]
  C --> E[Compute PHC by ecoregions and type and ecoregions]
  C --> F[Compute PHE across ecoregions and types ecoregions]
  E --> G[Visualize MAP]
  F --> H[Visualize Score 3 bins: low-intermediary-high]
  "
)
```

